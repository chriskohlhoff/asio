name: asio CI

on:
  workflow_dispatch:
  push:
    branches: [ master, citest-*, tony_develop ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build-type: ['sanity']
        runs-on: [self-hosted]
        compiler: [clang++]
        cxx-std: ['c++20']
        separate-compilation: ['--enable-separate-compilation']
        optim-level: ['-O0']
        no-deprecated: ['']
        select-reactor: ['-DASIO_DISABLE_KQUEUE']
        handler-tracking: ['']
        boost: ['']
        boost-url: ['']
    runs-on: ${{ matrix.runs-on }}
    env:
      CXX: ${{ matrix.compiler }}
      CXXFLAGS: -std=${{ matrix.cxx-std }} ${{ matrix.cxx-stdlib }} ${{ matrix.optim-level }} -Wall -Wextra ${{ matrix.no-deprecated }} ${{ matrix.select-reactor }} ${{ matrix.handler-tracking }}
    steps:
    - uses: actions/checkout@v2
    - name: Install autotools
      if: startsWith(matrix.runs-on, 'macos')
      run: brew install automake
    - name: Install compiler
      if: startsWith(matrix.runs-on, 'ubuntu')
      run: sudo apt-get install -y ${{ matrix.compiler }}
    - name: Install boost
      if: startsWith(matrix.with-boost, '--with-boost=$GITHUB_WORKSPACE')
      run: |
        wget --quiet -O - ${{ matrix.boost-url }} | tar -xj
    - name: Configure
      working-directory: asio
      run: |
        ./autogen.sh
        ./configure ${{ matrix.separate-compilation }} ${{ matrix.with-boost }}
    - name: Line length check
      working-directory: asio
      run: perl ./boostify.pl --includes-only
    - name: Sanity check
      if: startsWith(matrix.build-type, 'sanity')
      working-directory: asio/src/tests
      run: make unit/io_context.log unit/ip/tcp.log unit/ts/net.log
    - name: Build
      if: startsWith(matrix.build-type, 'full')
      working-directory: asio
      run: make && make check
